[
  {
    "likes_count": 804,
    "title": "「美しい」にモヤったら「認知負荷が小さい」と言いかえよう",
    "url": "https://qiita.com/tonluqclml/items/2a2ab902e298b4c8fa71"
  },
  {
    "likes_count": 748,
    "title": "若手エンジニアを不幸にしないための開発の「べからず」集",
    "url": "https://qiita.com/nonbiri15/items/80e75fbdc358d9144215"
  },
  {
    "likes_count": 733,
    "title": "10年モノのインフラを3年がかりでカイゼンした",
    "url": "https://qiita.com/sasasin/items/30585a3a117d64973645"
  },
  {
    "likes_count": 523,
    "title": "【JavaScript】本日未明、[ if - else ]さんが死体で発見され...",
    "url": "https://qiita.com/impl_s/items/57aeeb2cb9b6773ae2fd"
  },
  {
    "likes_count": 513,
    "title": "コミュニケーション能力の正体と「カレー作りの寓話」",
    "url": "https://qiita.com/hirokidaichi/items/355b5534746363130e61"
  },
  {
    "likes_count": 429,
    "title": "若手エンジニアを不幸にしないための開発の「べからず」集　組織運営編",
    "url": "https://qiita.com/nonbiri15/items/d6f06e9b53be343c0b61"
  },
  {
    "likes_count": 393,
    "title": "きれいなコードとは？ リファクタリングできれいなコードを書く方法",
    "url": "https://qiita.com/kyntk/items/d60fdbc51df4f1d4c3c7"
  },
  {
    "likes_count": 335,
    "title": "GitHubエンジニアによる「リファクタリングにおける冒険とは」の翻訳",
    "url": "https://qiita.com/Feel-Physics/items/ae500f344b63197d70cd"
  },
  {
    "likes_count": 308,
    "title": "ネストの深さは闇の深さ",
    "url": "https://qiita.com/DeployCat/items/1ec901864d4ab11c8d6f"
  },
  {
    "likes_count": 284,
    "title": "世界の凄腕エンジニア達からのプログラミングに関するお言葉集は不思議にココロを打つのでした",
    "url": "https://qiita.com/jabba/items/efcc1d7a15075e631b36"
  },
  {
    "likes_count": 272,
    "title": "今日から始められるリファクタリング10選 (1)",
    "url": "https://qiita.com/nunulk/items/2323b0c30a2cbe5fdb0c"
  },
  {
    "likes_count": 221,
    "title": "【JavaScript】命令と宣言と関心の分離",
    "url": "https://qiita.com/impl_s/items/3ab29783daf4f160bd1f"
  },
  {
    "likes_count": 211,
    "title": "三項演算子?:は悪である。",
    "url": "https://qiita.com/raccy/items/0b25b2f106e2a813828b"
  },
  {
    "likes_count": 201,
    "title": "Rubyのリファクタリングでイケてないコードを美しいオブジェクト指向設計のコードへ改良するための方法",
    "url": "https://qiita.com/jabba/items/e169adb2f33532c119cf"
  },
  {
    "likes_count": 198,
    "title": "混沌を極める jQuery のコードをいかにして Vue.js に頼らずに整理したか",
    "url": "https://qiita.com/cesare/items/c00acd7911afcba21224"
  },
  {
    "likes_count": 171,
    "title": "コードの不吉な臭い",
    "url": "https://qiita.com/NagaokaKenichi/items/22972e6ba698c7f2978a"
  },
  {
    "likes_count": 171,
    "title": "仕様の変更に強いコードを書きたいよねって話",
    "url": "https://qiita.com/JSON_HardCoder/items/09b7c3136bdad36c4830"
  },
  {
    "likes_count": 163,
    "title": "書籍「レガシーコードからの脱却」を読んでプロジェクトに適用すると良さそうな事",
    "url": "https://qiita.com/kojimadev/items/c2f5b4fea1992385c99a"
  },
  {
    "likes_count": 150,
    "title": "「リーダブルコード適用 チェックリスト」を作ってみました",
    "url": "https://qiita.com/AKB428/items/574f94695de51fa1fa19"
  },
  {
    "likes_count": 140,
    "title": "リファクタリングして学ぶTypeScriptでクリーンアーキテクチャ",
    "url": "https://qiita.com/kotauchisunsun/items/ec6b4086abe670c478fe"
  },
  {
    "likes_count": 137,
    "title": "若手エンジニアを不幸にしないための開発の「べからず」集　テスト編",
    "url": "https://qiita.com/nonbiri15/items/340f06bc72e84cd871a8"
  },
  {
    "likes_count": 137,
    "title": "ブラックボックス化したデータ基盤を作りなおすことを決意した貴方へ",
    "url": "https://qiita.com/piyo7/items/1c860f56bfaeb98bea04"
  },
  {
    "likes_count": 132,
    "title": "6万行の大規模リファクタリングを完遂する上でPOとしてやってよかった5つのこと",
    "url": "https://qiita.com/shiba_319/items/7bf15c4b54285cca3a8f"
  },
  {
    "likes_count": 100,
    "title": "delegateを使って、別クラスへの切り出し",
    "url": "https://qiita.com/jkr_2255/items/fcbe263b4b546ba76d8e"
  },
  {
    "likes_count": 93,
    "title": "闇の深いEC2を、EBSボリューム経由で、闇の深いDockerコンテナに転換する",
    "url": "https://qiita.com/sasasin/items/70cc8ebc96e4667ee9e2"
  },
  {
    "likes_count": 92,
    "title": "iOSリバーシリファクタリングチャレンジ w/ Redux",
    "url": "https://qiita.com/susieyy/items/257dd802ab77af335f89"
  },
  {
    "likes_count": 91,
    "title": "動くようにする、正しくする、速くする。",
    "url": "https://qiita.com/nonbiri15/items/4af917131d02d9101f53"
  },
  {
    "likes_count": 83,
    "title": "変数や関数の名前がいつの間にか分かりにくくなる問題",
    "url": "https://qiita.com/magicant/items/0a34ded3a81b9689fa02"
  },
  {
    "likes_count": 83,
    "title": "[Swift] count == 0 より isEmpty を使うべき理由",
    "url": "https://qiita.com/a-beco/items/bf740ed9c8e4575e64b2"
  },
  {
    "likes_count": 83,
    "title": "YYPHP#83「キレイなコードとは？」「フレームワークを使うメリット」「リファクタリングのやりかた」「テストコードを書くべきタイミングが分からない」「複数人での開発方法の知見が知りたい」",
    "url": "https://qiita.com/suin/items/78de7c848b6d9c2f3eb3"
  },
  {
    "likes_count": 82,
    "title": "強いエンジニアにHelloWorldさせてみた(縛りあり)",
    "url": "https://qiita.com/imishinist/items/1883b5eef836aeee93ff"
  },
  {
    "likes_count": 75,
    "title": "脱Rails初心者のためのリファクタリングガイド",
    "url": "https://qiita.com/ysi/items/fba39c5c5992d686b7a5"
  },
  {
    "likes_count": 69,
    "title": "ポインタ渡しより参照渡しを使う",
    "url": "https://qiita.com/nonbiri15/items/2aa72ce6899024de40f9"
  },
  {
    "likes_count": 68,
    "title": "今日から始められるリファクタリング10選 (2)",
    "url": "https://qiita.com/nunulk/items/3a0c4e71afdb14b09748"
  },
  {
    "likes_count": 67,
    "title": "負債を抱えすぎたRailsアプリのリファクタリング",
    "url": "https://qiita.com/klriutsa/items/09705c87ed221371d0ac"
  },
  {
    "likes_count": 65,
    "title": "vim-ruby-refactoringで面倒なリファクタリング作業を自動化",
    "url": "https://qiita.com/hyoshida/items/7dfa4826aab5526844af"
  },
  {
    "likes_count": 65,
    "title": "Javaリファクタリング初めの一歩",
    "url": "https://qiita.com/yukimura1227/items/c207eff8c1e9d1a3885e"
  },
  {
    "likes_count": 63,
    "title": "ユニットテストの歴史とテスタブルなコードについて",
    "url": "https://qiita.com/strike_yanagi/items/b60bbf4f93c3455123a4"
  },
  {
    "likes_count": 62,
    "title": "引き継いだソースコードをメンテナンスしやすくする。",
    "url": "https://qiita.com/nonbiri15/items/3417facd391e01c3e365"
  },
  {
    "likes_count": 58,
    "title": "超朗報。Xcode 9でやっとSwiftのリファクタリングが可能に",
    "url": "https://qiita.com/tonkotsuboy_com/items/76f1102c48d72ec6c5c5"
  },
  {
    "likes_count": 55,
    "title": "リファクタリングで何を優先すべきか（うれしかったかのは何か）",
    "url": "https://qiita.com/nonbiri15/items/10a654c615e73976a0eb"
  },
  {
    "likes_count": 55,
    "title": "Qiitaトレンド「毎朝15分勉強会」の機会を先輩に提供していただきました",
    "url": "https://qiita.com/YouBou/items/97205628a23f6a710e91"
  },
  {
    "likes_count": 53,
    "title": "闇の深い AMI を Packer で Infra as Code する",
    "url": "https://qiita.com/sasasin/items/83d91b635e04dd206b5a"
  },
  {
    "likes_count": 46,
    "title": "Clean Codeの初めの一歩",
    "url": "https://qiita.com/kyammy/items/63db981d35886ee5806f"
  },
  {
    "likes_count": 45,
    "title": "若手エンジニアを不幸にしないためのC++コーディングべからず集",
    "url": "https://qiita.com/nonbiri15/items/a6d9176691e6766d2ac3"
  },
  {
    "likes_count": 45,
    "title": "Javaを書くときに意識してほしいこと",
    "url": "https://qiita.com/11295/items/23a5338a0ef26d3dca9a"
  },
  {
    "likes_count": 44,
    "title": "リファクタリングから始めるiOS Clean Architecture (Presentation層＆Usecase)",
    "url": "https://qiita.com/shuyuhey/items/a4231dac5232510cd0ea"
  },
  {
    "likes_count": 44,
    "title": "若手エンジニアを不幸にしないための開発の「べからず」集 コーディング編",
    "url": "https://qiita.com/nonbiri15/items/6d05e9bfc5ecbdaaab92"
  },
  {
    "likes_count": 43,
    "title": "読みにくいコード改善メモ",
    "url": "https://qiita.com/mishizak/items/4bb0c638105a0b79a682"
  },
  {
    "likes_count": 43,
    "title": "今日から始められるリファクタリング10選 (3)",
    "url": "https://qiita.com/nunulk/items/8bee711d40e71c767eca"
  },
  {
    "likes_count": 42,
    "title": "Pythonで使えるリファクタリングツールたち",
    "url": "https://qiita.com/Alice1017/items/81d75640febcdfa9cfd9"
  },
  {
    "likes_count": 42,
    "title": "コードを読む人の助けになるコメントを書くために",
    "url": "https://qiita.com/mishimay/items/3dc2d832b76dee85410d"
  },
  {
    "likes_count": 41,
    "title": "技術的負債（Technical Debt）とは何かをやさしく説明",
    "url": "https://qiita.com/kyammy/items/0cbaebe4d51f7725c095"
  },
  {
    "likes_count": 38,
    "title": "引き継いだソースコードを改変する前に",
    "url": "https://qiita.com/nonbiri15/items/47e25c2d5fb46f3495df"
  },
  {
    "likes_count": 38,
    "title": "include-what-you-useとjenkinsでC/C++プロジェクトから不要な#includeを洗い出す",
    "url": "https://qiita.com/tomota-tar-gz/items/985b660e8f3052a387ef"
  },
  {
    "likes_count": 38,
    "title": "Rubyのメソッドの引数でデフォルト式を与える場合は、通常の引数ではなく「キーワード引数」を使おう",
    "url": "https://qiita.com/aeroastro/items/49e18cb7e95a64e0eacf"
  },
  {
    "likes_count": 37,
    "title": "RubyのリファクタリングでNull Objectを使ってコードをスッキリさせる方法",
    "url": "https://qiita.com/jabba/items/054c6c91022d0a682e46"
  },
  {
    "likes_count": 36,
    "title": "FORTRANのModernizeに使えるいくつかの機能",
    "url": "https://qiita.com/implicit_none/items/55c47407aa376277a531"
  },
  {
    "likes_count": 36,
    "title": "【React】useReducerを使ったカスタムフックのサンプル",
    "url": "https://qiita.com/impl_s/items/e9984c8a2830ea2876ba"
  },
  {
    "likes_count": 35,
    "title": "C++ では C言語由来 の多次元配列を使うべき理由がない。",
    "url": "https://qiita.com/nonbiri15/items/a5c05eefbb297716b3a5"
  },
  {
    "likes_count": 35,
    "title": "ヘッダファイルという名の仕様書",
    "url": "https://qiita.com/nonbiri15/items/f0730901fd195387731f"
  },
  {
    "likes_count": 35,
    "title": "do-while(false) を見つけたときの雑感",
    "url": "https://qiita.com/khsk/items/a2e06cd5de60b918dcfb"
  },
  {
    "likes_count": 35,
    "title": "Builderパターン",
    "url": "https://qiita.com/takutotacos/items/33cfda205ab30a43b0b1"
  },
  {
    "likes_count": 34,
    "title": "ヘッダファイルの記述は最小限に",
    "url": "https://qiita.com/nonbiri15/items/78f6ae4102beb03196c1"
  },
  {
    "likes_count": 34,
    "title": "手離れのいい外部仕様を作成しよう",
    "url": "https://qiita.com/nonbiri15/items/9f58dd25a0a6efb91de6"
  },
  {
    "likes_count": 34,
    "title": "リファクタリングを進めていく",
    "url": "https://qiita.com/nonbiri15/items/34579ffbdd8e9a54d03e"
  },
  {
    "likes_count": 34,
    "title": "PDFの画像比較をリファクタリングに活かす",
    "url": "https://qiita.com/oohira/items/184dbbe7c631e8c335a1"
  },
  {
    "likes_count": 34,
    "title": " VimでPHPのコードをシュワルツ変換してソートする",
    "url": "https://qiita.com/kana1/items/68b21838013bfd65b097"
  },
  {
    "likes_count": 33,
    "title": "今日からできるruby on railsリファクタリングtips１２選",
    "url": "https://qiita.com/namitop/items/6dce7588fbcf8920b9af"
  },
  {
    "likes_count": 33,
    "title": "既存サービスをリファクタしながら進めることにつらさを感じてるあなたに",
    "url": "https://qiita.com/tohruyamamoto/items/1312176f272e332b8067"
  },
  {
    "likes_count": 33,
    "title": "10年物システムの裏側",
    "url": "https://qiita.com/tunanosuke/items/11acdcf8c10b9091d188"
  },
  {
    "likes_count": 32,
    "title": "i18n、enumを利用して、formforのf.selectを日本語化する",
    "url": "https://qiita.com/tomoharutt/items/272a10f4fefb555944f2"
  },
  {
    "likes_count": 30,
    "title": "Xcodeのプロジェクトを大掃除する方法",
    "url": "https://qiita.com/syamaoka/items/9ab40011aad5f9d1f975"
  },
  {
    "likes_count": 30,
    "title": "バグか仕様か手法の限界か？",
    "url": "https://qiita.com/nonbiri15/items/a2695efa0250f372b8b2"
  },
  {
    "likes_count": 30,
    "title": "PHPで長い文字列を扱う方法色々",
    "url": "https://qiita.com/t_mitarai/items/e50c7c7f284cb3ae6732"
  },
  {
    "likes_count": 29,
    "title": "難しいと思ってたRailsのパフォーマンス・チューニングがちょっとしたことで劇的に改善できた話",
    "url": "https://qiita.com/jabba/items/5765ff6c0002813d8b31"
  },
  {
    "likes_count": 27,
    "title": "深すぎるif文for文の入れ子を書き換える",
    "url": "https://qiita.com/nonbiri15/items/1cdeb9ea5eb51e7e84e3"
  },
  {
    "likes_count": 25,
    "title": "簡単なんじゃない、簡単にするんだ。",
    "url": "https://qiita.com/nonbiri15/items/bb398cf647557a0d30fe"
  },
  {
    "likes_count": 25,
    "title": "そして前任者誰もいなくなったときのサバイバルガイド",
    "url": "https://qiita.com/e99h2121/items/7190085458af285893df"
  },
  {
    "likes_count": 24,
    "title": "エンジニアはなぜ機能追加を拒むのか",
    "url": "https://qiita.com/aggre/items/2c10fdb7d06bab558523"
  },
  {
    "likes_count": 23,
    "title": "PHPStormでリファクタが捗るおすすめ6+1選",
    "url": "https://qiita.com/gtongy/items/76ef9a57ef084ca0b626"
  },
  {
    "likes_count": 23,
    "title": "別視点から理解するクリーンアーキテクチャと適用限界",
    "url": "https://qiita.com/kotauchisunsun/items/66c8946994344e19b1a8"
  },
  {
    "likes_count": 22,
    "title": "私はswitch文が嫌い",
    "url": "https://qiita.com/nonbiri15/items/4cb1b317fcb88f270a55"
  },
  {
    "likes_count": 22,
    "title": "Google Apps ScriptによるクイズWebアプリを作って英語学習する",
    "url": "https://qiita.com/Suibari_cha/items/87503c55d984ff0f43e6"
  },
  {
    "likes_count": 22,
    "title": "PHP初心者もできる else句を使わない読みやすいコード ※追記",
    "url": "https://qiita.com/ryuji-oda/items/816f0c9133ec69b812b1"
  },
  {
    "likes_count": 21,
    "title": "定式化の仕方しだいで問題は解きやすくなる",
    "url": "https://qiita.com/nonbiri15/items/c0d1b19b610ad5f3b6b5"
  },
  {
    "likes_count": 21,
    "title": "年末の大掃除がてらリファクタリングをしよう",
    "url": "https://qiita.com/masatam81/items/733fa796a369c95d4a79"
  },
  {
    "likes_count": 19,
    "title": "OSごとに#ifdef を書く必要は本当にあるのか",
    "url": "https://qiita.com/nonbiri15/items/55ee7a18d8e4c69c3a82"
  },
  {
    "likes_count": 19,
    "title": "PHPのリファクタリングを考察する(クラス名篇)",
    "url": "https://qiita.com/tadsan/items/f324fccc9c5bf8bbffe1"
  },
  {
    "likes_count": 19,
    "title": "Railsのストロングパラメータ（Strong Parameters）を一括で処理する書き方",
    "url": "https://qiita.com/masaoops/items/5698fcd6c70b95fd3da1"
  },
  {
    "likes_count": 19,
    "title": "Reactのパターン(Composition, Compound Components)を使ってリファクタリング",
    "url": "https://qiita.com/myktsk/items/5f4d443cd7e10686f189"
  },
  {
    "likes_count": 18,
    "title": "他の言語の他のライブラリという検証済みのアイディアを利用しよう",
    "url": "https://qiita.com/nonbiri15/items/7c44f4aea313be75e146"
  },
  {
    "likes_count": 18,
    "title": "【RSpec】shared_examplesを使ってテストをもう少しスリムにする",
    "url": "https://qiita.com/yu-croco/items/d0088a75b033d46f8c39"
  },
  {
    "likes_count": 18,
    "title": "過去に経験したシステムがなぜ苦しかったか（現場で役立つシステム設計の原則～第１章 を読んで）",
    "url": "https://qiita.com/cazimayaa/items/4d494f11c93bdf05d5fa"
  },
  {
    "likes_count": 17,
    "title": "std::map型を使って見通しのよいコーディングをしよう",
    "url": "https://qiita.com/nonbiri15/items/ff739d455377bc1bc9ed"
  },
  {
    "likes_count": 17,
    "title": "「伝説のゲーム「2048」をPythonで自作してAIに解かせる(2) 」をリファクタリングさせていただいた",
    "url": "https://qiita.com/shiracamus/items/e94f84a275877f723c6c"
  },
  {
    "likes_count": 17,
    "title": "【リファクタリング】こんなコードはイヤなので一刻も早く綺麗にしたい",
    "url": "https://qiita.com/yu-croco/items/36a891af2e7e7ab564b4"
  },
  {
    "likes_count": 17,
    "title": "「汚いコード、綺麗なコードって何？」リファクタリングを考えてみる",
    "url": "https://qiita.com/yuno_miyako/items/dd0a2d91bb96d1ce2630"
  },
  {
    "likes_count": 15,
    "title": "条件分岐は早期リターンを使用するか、無難に条件網羅で書くか-15[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/b935896f514f2f079b86"
  },
  {
    "likes_count": 15,
    "title": "Code Smell とリファクタリング技法について調べてみた",
    "url": "https://qiita.com/taumax/items/f192b16676f78fa04849"
  },
  {
    "likes_count": 15,
    "title": "不等号の向きについて〜リーダブルコード🆚コードコンプリート〜",
    "url": "https://qiita.com/kitoo/items/bec038105471eec82689"
  },
  {
    "likes_count": 15,
    "title": "コンポーネントをテストする運動をしてみた - フロントの設計、テストの工夫",
    "url": "https://qiita.com/ti_aiuto/items/d1829062b4383b6c7fca"
  },
  {
    "likes_count": 14,
    "title": "視点がさまよっているif文,for文は読みにくい",
    "url": "https://qiita.com/nonbiri15/items/d576defb0317ed26e426"
  },
  {
    "likes_count": 14,
    "title": "[Swift] サンプルを見ながら、リファクタリングを勉強する",
    "url": "https://qiita.com/eKushida/items/32ebe036c8b0846c7b3f"
  },
  {
    "likes_count": 14,
    "title": "リファクタか、リライトか。それをどう判断するのか。 (レガシーソフトウェア改善ガイド)",
    "url": "https://qiita.com/little_hand_s/items/74db7695744599137c3a"
  },
  {
    "likes_count": 14,
    "title": "インスタンス変数を nil で初期化しておく明確な理由がわかった(と思ったら勘違いだった)",
    "url": "https://qiita.com/akicho8/items/a276ad10df334580298e"
  },
  {
    "likes_count": 14,
    "title": "アブノーマルアプリケーション・リファクタリング",
    "url": "https://qiita.com/tkow/items/03f1f86c441828ffb5b7"
  },
  {
    "likes_count": 14,
    "title": "比較演算子「>」「>=」を使わなければ QOL が上昇する",
    "url": "https://qiita.com/Nabetani/items/0482f72d302a25da2479"
  },
  {
    "likes_count": 13,
    "title": "#ifdefが多数あるプロジェクトをどうテストする？",
    "url": "https://qiita.com/nonbiri15/items/f77a91387d36bed07fd4"
  },
  {
    "likes_count": 13,
    "title": "関数の引数が多すぎる- 良いコード書くきっかけを与えたい。8[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/35ed38c0d3a26dbe8c70"
  },
  {
    "likes_count": 13,
    "title": "【Java】ソースレビューを依頼する前にセルフチェックできること【初心者】",
    "url": "https://qiita.com/mtanabe/items/aba0c9ec8e3a76792e2f"
  },
  {
    "likes_count": 13,
    "title": "わかりやすい変数名・関数名を付けるための３つのコツ",
    "url": "https://qiita.com/zawawahoge/items/918c83d4865b3497680c"
  },
  {
    "likes_count": 12,
    "title": "CppUnitの導入で得られた恩恵",
    "url": "https://qiita.com/nonbiri15/items/a21608f79fbb1114ef5e"
  },
  {
    "likes_count": 12,
    "title": "問題が明確化できているときは、半分解けている",
    "url": "https://qiita.com/nonbiri15/items/56ce4f52656e8ae263bd"
  },
  {
    "likes_count": 12,
    "title": "過剰なリファクタリングライン コピペ(共通化・抽象化)編",
    "url": "https://qiita.com/khsk/items/04ed87700fe7ff51838a"
  },
  {
    "likes_count": 11,
    "title": "(模索中)リファクタリング：パラメタの受け渡し用NSDictionaryを専用クラス化する方法",
    "url": "https://qiita.com/paming/items/016f6c81b46efbeb52d9"
  },
  {
    "likes_count": 11,
    "title": "長すぎる関数を短くするヒント",
    "url": "https://qiita.com/nonbiri15/items/a3063fd572421bebfd88"
  },
  {
    "likes_count": 11,
    "title": "ソースコードのお掃除",
    "url": "https://qiita.com/FScoward/items/539e62098088e09cb757"
  },
  {
    "likes_count": 11,
    "title": "CSSの@importを例にプログラムにおけるメンテナンス性の重要性を解説してみる",
    "url": "https://qiita.com/imaizume/items/eac1a9225c5432f05ef4"
  },
  {
    "likes_count": 11,
    "title": "開発のしやすさを重視した仕様を作成しよう",
    "url": "https://qiita.com/nonbiri15/items/439a9a3d7638aee2f38d"
  },
  {
    "likes_count": 11,
    "title": "初心者だけど初心者にswitch文をもっと真っ当に教えてほしい件",
    "url": "https://qiita.com/RyunoT/items/a9f4b8cf43fa8f1bff57"
  },
  {
    "likes_count": 11,
    "title": "アプリ開発で気を付けること",
    "url": "https://qiita.com/yuukiw00w/items/9fbf641e65e1440e7313"
  },
  {
    "likes_count": 11,
    "title": "Refactoring 2nd Editionを記念したMartin FowlerのWebinarメモ",
    "url": "https://qiita.com/diskshima/items/5473313b52bc488b1042"
  },
  {
    "likes_count": 11,
    "title": "プログラムと美しさ：第六章　リファクタリング　―約束された未来―",
    "url": "https://qiita.com/CodeOne/items/df50fad6bb0bd2f0096f"
  },
  {
    "likes_count": 11,
    "title": "肥大化して差分ビルドとサジェストが効かなくなったiOSプロジェクトの高速化に挑んだ話",
    "url": "https://qiita.com/abui/items/d6ddbe8ad5273d6335e4"
  },
  {
    "likes_count": 10,
    "title": "後々困らないクラス設計の基本 [条件分岐]",
    "url": "https://qiita.com/t4kmru/items/52dd603e45c426d8ea7d"
  },
  {
    "likes_count": 10,
    "title": "デバッグ用のコードがメンテナンスを妨げてないか",
    "url": "https://qiita.com/nonbiri15/items/2e45b0e2c827e58ebd8f"
  },
  {
    "likes_count": 10,
    "title": "ビジネスロジックに影響を与えない進捗表示 - C#,Java",
    "url": "https://qiita.com/csharpisthebest/items/7e50a6d4439760ad1fd5"
  },
  {
    "likes_count": 10,
    "title": "レガシーコードを段階的に改善する",
    "url": "https://qiita.com/kikuchis/items/4cf2c8ed7af4a4b783ac"
  },
  {
    "likes_count": 10,
    "title": "ユビレジのリファクタリングの話",
    "url": "https://qiita.com/yasos/items/3b7e983d57f81c750422"
  },
  {
    "likes_count": 10,
    "title": "React Redux の 過剰なコンポーネントアップデートを抑制する方法一覧",
    "url": "https://qiita.com/EndouT6/items/540ed5859f5fd0165fce"
  },
  {
    "likes_count": 10,
    "title": "ガード節を使って読みやすいコードを書こう",
    "url": "https://qiita.com/nouka/items/0caf4318da5cd2a0a58f"
  },
  {
    "likes_count": 10,
    "title": "歴史あるRailsアプリケーションのリファクタについて考えていることなど",
    "url": "https://qiita.com/ti_aiuto/items/29d5b8fb0aa1d2d6f8c4"
  },
  {
    "likes_count": 10,
    "title": "Backstop.jsでクリスマスを少し幸せにするリファクタリング",
    "url": "https://qiita.com/yuzuru_xa/items/4f257d5d3f9fb598d6bb"
  },
  {
    "likes_count": 9,
    "title": "「野放しのグローバル変数」からクラスを見つけ出す",
    "url": "https://qiita.com/nonbiri15/items/d4c85bf586ed694e58b1"
  },
  {
    "likes_count": 9,
    "title": "string.h は忘れよう",
    "url": "https://qiita.com/nonbiri15/items/d5982e67955483c1ab5a"
  },
  {
    "likes_count": 9,
    "title": "その関数に直接関係ない部分を別の関数にする（無関係の下位問題を抽出する - リーダブルコードより）",
    "url": "https://qiita.com/y-temp4/items/423545151d0eeafe91e2"
  },
  {
    "likes_count": 9,
    "title": "switchを消すメイキング的な話",
    "url": "https://qiita.com/sasanon/items/3a6ff6dc54b4fd8bafdb"
  },
  {
    "likes_count": 9,
    "title": "DynamoDBでgetItemの繰り返しはbatchGetItemにする",
    "url": "https://qiita.com/nisiogiPTD/items/e38fe7f7ef0ec318bbd0"
  },
  {
    "likes_count": 9,
    "title": "引き継いだソースコードを大幅改変する",
    "url": "https://qiita.com/nonbiri15/items/1f17bc44016abecd8fac"
  },
  {
    "likes_count": 9,
    "title": "if文は条件分岐ではない",
    "url": "https://qiita.com/gomiryo/items/f591aa99be8747e186a0"
  },
  {
    "likes_count": 9,
    "title": " 男性メイン画面のカードスワイプ部分をゴリゴリリファクタリングした話",
    "url": "https://qiita.com/starmaine777/items/e7d43a64169863fd2ddb"
  },
  {
    "likes_count": 9,
    "title": "改造版: Pythonのtkinterでブロック崩しを作ってみた。",
    "url": "https://qiita.com/shiracamus/items/fa9c926626cfdf54b5a6"
  },
  {
    "likes_count": 9,
    "title": "クソコードの果てに",
    "url": "https://qiita.com/wraith13/items/ed0557a5681affcb127c"
  },
  {
    "likes_count": 8,
    "title": "委譲による継承の置き換え Replace Inheritance with Delegation",
    "url": "https://qiita.com/decoch/items/361eb1681d231ca83e65"
  },
  {
    "likes_count": 8,
    "title": "複雑さと前提条件が増えすぎるとメンテナンス不能になる。",
    "url": "https://qiita.com/nonbiri15/items/db4ec3077837f691535b"
  },
  {
    "likes_count": 8,
    "title": "単一責務の原理(Single Responsibility Principle)を守るとバグに苦しむことが減る",
    "url": "https://qiita.com/nonbiri15/items/3a79fdc9a61203132368"
  },
  {
    "likes_count": 8,
    "title": "アンチパターンコード 「ウォーターフォール型関数呼び出し(仮)」",
    "url": "https://qiita.com/tag1216/items/47816eedc17ae6f92ab7"
  },
  {
    "likes_count": 8,
    "title": "プログラミングの原則６（５）選の具体事例",
    "url": "https://qiita.com/kyammy/items/35138b06b90f7926c4f6"
  },
  {
    "likes_count": 8,
    "title": "巨大ロジッククラスのリファクタリングをしてみた",
    "url": "https://qiita.com/yakipudding/items/c19641bf08cbae67c5ec"
  },
  {
    "likes_count": 8,
    "title": "リファクタリング: Rubyエディション 第6章",
    "url": "https://qiita.com/tamago3keran/items/898936b716984cd55b1f"
  },
  {
    "likes_count": 8,
    "title": "【DDDモノ】②リファクタリングの《最重要目標》のオブジェクトに分かりやすい名前を与える。",
    "url": "https://qiita.com/e-a-st/items/97c70c40fdb236efe03b"
  },
  {
    "likes_count": 8,
    "title": "Railsでクエリが複雑になってきたのでQueryObjectパターンでリファクタをして良かった話",
    "url": "https://qiita.com/sisisin/items/7ef146e6953322867103"
  },
  {
    "likes_count": 8,
    "title": "【BtoBシステムあるある】特別対応する場合のモデルについて考察する",
    "url": "https://qiita.com/YasuhiroKimesawa/items/bac3eea2bfc3f6d68458"
  },
  {
    "likes_count": 7,
    "title": "ネスト解消のためのポリモーフィズムについて",
    "url": "https://qiita.com/puriketu99/items/c2ac3b833add0de45463"
  },
  {
    "likes_count": 7,
    "title": "独立性の高い機能を追加するときには",
    "url": "https://qiita.com/nonbiri15/items/58a6781953a2da0f527c"
  },
  {
    "likes_count": 7,
    "title": "快適なC++生活のためにスクリプト言語を使おう２　C++のソースを自動生成させる",
    "url": "https://qiita.com/nonbiri15/items/3e5361613390a8ff516e"
  },
  {
    "likes_count": 7,
    "title": "コーディング初心者に伝えたい、きれいなコードを書くためのたった7つのこと",
    "url": "https://qiita.com/tearoom6/items/4099ed5d0d8c3ab7867e"
  },
  {
    "likes_count": 7,
    "title": "いまさらリーダブルコードまとめ (第1章)",
    "url": "https://qiita.com/IsaoTakahashi/items/1eca3723df4fa3d1f4a9"
  },
  {
    "likes_count": 7,
    "title": "「橋を燃やすな原則」",
    "url": "https://qiita.com/nonbiri15/items/46312304fe8d4bb75276"
  },
  {
    "likes_count": 7,
    "title": "extern をC++のライブラリから取り除く",
    "url": "https://qiita.com/nonbiri15/items/6c2ed44b9852c9bf8e37"
  },
  {
    "likes_count": 7,
    "title": "[読書メモ]現場で役立つシステム設計の原則 - 「小さくまとめてわかりやすくする」",
    "url": "https://qiita.com/takutotacos/items/d81e3405a64594dd819b"
  },
  {
    "likes_count": 7,
    "title": "循環的複雑度を下げたい",
    "url": "https://qiita.com/0shoke/items/2800d17c046a4c87f312"
  },
  {
    "likes_count": 7,
    "title": "【jQuery】onイベントでコールバック関数に引数を渡す方法",
    "url": "https://qiita.com/tsukahara-akito/items/7cf542cf1fe40ca705f1"
  },
  {
    "likes_count": 7,
    "title": "中間データのスキーマを安全に変更する手順",
    "url": "https://qiita.com/piyo7/items/be5c0399197ef1235adf"
  },
  {
    "likes_count": 7,
    "title": "C++で簡単に2次元配列を扱うクラスを実装する",
    "url": "https://qiita.com/gis/items/e936de237676120aa8a0"
  },
  {
    "likes_count": 7,
    "title": "【DDDモノ】①クリーンアーキテクチャの概要(目的:DDDによりモノリスでくたびれたシステムのIoT対応改修をする)",
    "url": "https://qiita.com/e-a-st/items/5d81693229f0fc324572"
  },
  {
    "likes_count": 7,
    "title": "リファクタリング： Javaでブラックジャックを作る",
    "url": "https://qiita.com/shiracamus/items/58e7f28f63bff5b588d2"
  },
  {
    "likes_count": 7,
    "title": "Laravel触って1年経ったので過去の戒め（ソースコード）を改善してみた",
    "url": "https://qiita.com/namizatork/items/dea95d86476bcfa2885c"
  },
  {
    "likes_count": 7,
    "title": "リーダブルコード要約",
    "url": "https://qiita.com/koyablue/items/ccb55ea5df475d001183"
  },
  {
    "likes_count": 6,
    "title": "読みやすいコードを書くためのTips",
    "url": "https://qiita.com/gonshi_com/items/f5c5eebd63f83b6f8e50"
  },
  {
    "likes_count": 6,
    "title": "よいデータ構造でコードを簡潔にする",
    "url": "https://qiita.com/nonbiri15/items/f7dd16f156265fb85adf"
  },
  {
    "likes_count": 6,
    "title": "ソースの分割は論理構造の分割だ(名前空間の併用の勧め)",
    "url": "https://qiita.com/nonbiri15/items/604033b1d719d9a36f18"
  },
  {
    "likes_count": 6,
    "title": "わかりやすくなければ改善ができない。",
    "url": "https://qiita.com/nonbiri15/items/84f7728d1fc19e64cef4"
  },
  {
    "likes_count": 6,
    "title": "本格的なリファクタリングの練習問題",
    "url": "https://qiita.com/potimarimo/items/9ea1e04a1ac63c3b8d0a"
  },
  {
    "likes_count": 6,
    "title": "いまさらリーダブルコードまとめ (第2章)",
    "url": "https://qiita.com/IsaoTakahashi/items/a90edd72faf03b8b801c"
  },
  {
    "likes_count": 6,
    "title": "いまさらリーダブルコードまとめ (第3章)",
    "url": "https://qiita.com/sora083/items/b8b1da578713f006eb14"
  },
  {
    "likes_count": 6,
    "title": "PHP ソース改善Tips",
    "url": "https://qiita.com/ryoichi-u/items/ee784336076b9b32b308"
  },
  {
    "likes_count": 6,
    "title": "マクロ定数が多すぎる。",
    "url": "https://qiita.com/nonbiri15/items/a39e15b7bdc9d85b9f97"
  },
  {
    "likes_count": 6,
    "title": "良いコード書くきっかけを与えたい。",
    "url": "https://qiita.com/csharpisthebest/items/90f040ad52c213bd0d64"
  },
  {
    "likes_count": 6,
    "title": "流れるようなインターフェース？-良いコード書くきっかけを与えたい。3[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/403d40374acc70ef24e3"
  },
  {
    "likes_count": 6,
    "title": "Bool型の扱い- 良いコード書くきっかけを与えたい。7[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/b0c44764948e1334e94a"
  },
  {
    "likes_count": 6,
    "title": "要素とその個数をペアにしたハッシュを求めるコードが試行錯誤ののちにだんだん読みやすくなっていく例",
    "url": "https://qiita.com/akicho8/items/f7df67512c3360b282e6"
  },
  {
    "likes_count": 6,
    "title": "今日からはじめる単体テストとリファクタリング",
    "url": "https://qiita.com/usuimachinami/items/adc415f706eda8960cb5"
  },
  {
    "likes_count": 6,
    "title": "React Redux の 高負荷なコンポーネントを高速で突き止める",
    "url": "https://qiita.com/EndouT6/items/b90b003ee4fbc80d9e9d"
  },
  {
    "likes_count": 6,
    "title": "【Ruby】より\"よい\" FizzBuzzを書く",
    "url": "https://qiita.com/t12u/items/8dfe5cc075fa0c9f5bd2"
  },
  {
    "likes_count": 6,
    "title": "Laravel　検索機能　複数条件",
    "url": "https://qiita.com/tsurutadesu/items/2f1d14abcb48adabac39"
  },
  {
    "likes_count": 6,
    "title": "メソッドなどの命名に使う英語動詞にこだわってみる",
    "url": "https://qiita.com/mlmlykt/items/9b9ee746f00e29b1eae8"
  },
  {
    "likes_count": 6,
    "title": "Re:factoring -「こんまりメソッド」で始めるコード断捨離",
    "url": "https://qiita.com/yoshihiko_k/items/261563f4f5ad29126e73"
  },
  {
    "likes_count": 6,
    "title": "レガシーRailsシステムとの奮闘",
    "url": "https://qiita.com/yahagin/items/c1db4a54c1d755848e46"
  },
  {
    "likes_count": 6,
    "title": "名著「リーダブルコード」の内容をわかりやすくまとめてみた(前編) 2020年",
    "url": "https://qiita.com/Marusoccer/items/72203728094faa84ab8d"
  },
  {
    "likes_count": 5,
    "title": "Range Adapter を使ってループを分解",
    "url": "https://qiita.com/kaoru/items/c6146cb7eb9a9da5d900"
  },
  {
    "likes_count": 5,
    "title": "いまさらリーダブルコードまとめ（第４章）",
    "url": "https://qiita.com/tokutoku/items/c31d5de982fd9e7bae44"
  },
  {
    "likes_count": 5,
    "title": "いまさらリーダブルコードまとめ (第8章)",
    "url": "https://qiita.com/sora083/items/046118e41ab674160d9c"
  },
  {
    "likes_count": 5,
    "title": "コレクションに対する無駄な処理- 良いコード書くきっかけを与えたい。5[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/7a9177a2a27002579b03"
  },
  {
    "likes_count": 5,
    "title": "目次　コードリファクタリングや関連記事",
    "url": "https://qiita.com/csharpisthebest/items/57f27a33085f01211166"
  },
  {
    "likes_count": 5,
    "title": "rubyistがリーダブルコードを読んでみて",
    "url": "https://qiita.com/kindaidai/items/ec2e655d6dbad54d62e9"
  },
  {
    "likes_count": 5,
    "title": "新人が教わったリファクタリング諸々",
    "url": "https://qiita.com/kithz39/items/ecd932ffffb07e6b4390"
  },
  {
    "likes_count": 5,
    "title": "段階を踏みつつリファクタリングしてみる",
    "url": "https://qiita.com/suzuki-hoge/items/220e36eb34b160ada527"
  },
  {
    "likes_count": 5,
    "title": "手を動かしながら開発するとゴミソースができあがる",
    "url": "https://qiita.com/yakipudding/items/ab5c1d4b47abac428b02"
  },
  {
    "likes_count": 5,
    "title": "【ExcelVBA】爆速カラーリングの戦術メモ",
    "url": "https://qiita.com/YoshitakaOkada/items/25c73d1eb1a87abfa25c"
  },
  {
    "likes_count": 5,
    "title": "「プリンシプル オブ プログラミング」を読んで意識していることまとめ(実例付き)",
    "url": "https://qiita.com/nossey/items/877e6d76fd318f9a9264"
  },
  {
    "likes_count": 5,
    "title": "継続的インテグレーション(デリバリー)サービスを利用しないという罪悪  :ビルドのたびに手動でテストを実行させ続けるというざ罪悪",
    "url": "https://qiita.com/nonbiri15/items/17b37664f94d4b1784aa"
  },
  {
    "likes_count": 5,
    "title": "テストのすヽめ【jest】",
    "url": "https://qiita.com/katsuyuki/items/8dc4e211a2de89793b88"
  },
  {
    "likes_count": 5,
    "title": "要求とポリシーの分離",
    "url": "https://qiita.com/ShinNakamura/items/dee3eddc644e44a4f2c5"
  },
  {
    "likes_count": 5,
    "title": "リファクタリングでモブプロみたいなことをしたお話",
    "url": "https://qiita.com/TsubasaKawajiri/items/804a46069c14922d2f72"
  },
  {
    "likes_count": 5,
    "title": "修正がきくことが大事",
    "url": "https://qiita.com/nonbiri15/items/9c8089f4a390b5865968"
  },
  {
    "likes_count": 5,
    "title": "変更に強いプログラムを書こう",
    "url": "https://qiita.com/pepen/items/ce74af97fb36b84bf63e"
  },
  {
    "likes_count": 5,
    "title": "プロジェクト内の「良くない」コードを減らすための戦略",
    "url": "https://qiita.com/Chrysanthemum94/items/6a58568d36c51afd633b"
  },
  {
    "likes_count": 5,
    "title": "オブジェクト指向の真髄がわからなくてもそれっぽいコードが書ける実装ルール",
    "url": "https://qiita.com/michida/items/96a9f36a98e619a4114a"
  },
  {
    "likes_count": 4,
    "title": "読書ノート:リファクタリング",
    "url": "https://qiita.com/Outstrp/items/e631f2a3d35782457cfa"
  },
  {
    "likes_count": 4,
    "title": "四半期計算から考えるコードの書き方",
    "url": "https://qiita.com/cocottejs/items/152eb577c42b6b778ce2"
  },
  {
    "likes_count": 4,
    "title": "コードを書く際の注意点",
    "url": "https://qiita.com/kosei/items/b1b6c34db87b93819cce"
  },
  {
    "likes_count": 4,
    "title": "設計の確定しきらない部分をstd::unordered_map型に押し込もう",
    "url": "https://qiita.com/nonbiri15/items/7f5a9aad62422d7c4db0"
  },
  {
    "likes_count": 4,
    "title": "いまさらリーダブルコードまとめ（第５･６章）",
    "url": "https://qiita.com/zephyria/items/cc48c843af8aefe39fdc"
  },
  {
    "likes_count": 4,
    "title": "[リファクタリングRails]更新頻度が低いカラムだけ別テーブルに抽出",
    "url": "https://qiita.com/kasei-san/items/db54915eaafc25f09294"
  },
  {
    "likes_count": 4,
    "title": "[リファクタリングRails]親子関係をポリモーフィック関連に変更",
    "url": "https://qiita.com/kasei-san/items/c6ded7c45ff5ce680e9b"
  },
  {
    "likes_count": 4,
    "title": "マクロ定数が多すぎるへの対策",
    "url": "https://qiita.com/nonbiri15/items/140ab866d4b6ef017f50"
  },
  {
    "likes_count": 4,
    "title": "ややこしい条件分岐-良いコード書くきっかけを与えたい。1[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/99af9136883f139ad70f"
  },
  {
    "likes_count": 4,
    "title": "ちょっと気になるコード集-良いコード書くきっかけを与えたい。2[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/7d9d2c7e4da4b89488fd"
  },
  {
    "likes_count": 4,
    "title": "技術的負債に真剣に向き合ってみる",
    "url": "https://qiita.com/sho0211/items/e35b0523ca8e23a3bc1b"
  },
  {
    "likes_count": 4,
    "title": "いいコードって何だろう？",
    "url": "https://qiita.com/kindaidai/items/82a4c024a7e7f318cd33"
  },
  {
    "likes_count": 4,
    "title": "年末なんで大掃除(技術的負債のたな卸し)してみよう。",
    "url": "https://qiita.com/egoa56/items/4120b37dd36b6ad56880"
  },
  {
    "likes_count": 4,
    "title": "【enum】リソースの状態を表す",
    "url": "https://qiita.com/tomoharutt/items/f1a70babaddcf7ab47be"
  },
  {
    "likes_count": 4,
    "title": "「for + if」を「filter」で置き換えてネストを減らす",
    "url": "https://qiita.com/Appseed246/items/7f95a376c1b9b4669013"
  },
  {
    "likes_count": 4,
    "title": "リファクタリング: Rubyエディション 第2章",
    "url": "https://qiita.com/tamago3keran/items/dbe43cfcad01b4bac3ce"
  },
  {
    "likes_count": 4,
    "title": "リファクタリング: Ruby エディション 第7章",
    "url": "https://qiita.com/tamago3keran/items/d435f6c1280f8de29ad4"
  },
  {
    "likes_count": 4,
    "title": "【Ruby】柔軟性のあるコードを書くために気をつけていること",
    "url": "https://qiita.com/yu-croco/items/5c5a4560e59d703562a9"
  },
  {
    "likes_count": 4,
    "title": "リファクタリング: Ruby エディション 第10章",
    "url": "https://qiita.com/tamago3keran/items/81a7fbd68d33c705b452"
  },
  {
    "likes_count": 4,
    "title": "「いや、これはもう改修じゃなくて一から作り直しましょう」と思ったときに読み返したい記事",
    "url": "https://qiita.com/tonluqclml/items/d2276e5fb17cc572ff75"
  },
  {
    "likes_count": 4,
    "title": "SIerの現場で出会ったヤバいコードをリファクタリングしてみた",
    "url": "https://qiita.com/TomoProg/items/684197af91b31d826fd4"
  },
  {
    "likes_count": 4,
    "title": "リファクタリング入門",
    "url": "https://qiita.com/WestRiver/items/3f39286ebef5740c693e"
  },
  {
    "likes_count": 4,
    "title": "コードを理解する手法",
    "url": "https://qiita.com/yamuscle/items/70d99d9ba2e7addf2410"
  },
  {
    "likes_count": 4,
    "title": "[リファクタリング]リファクタのリファクタ。もしくはある日のきのこたけのこ大戦争～序～",
    "url": "https://qiita.com/zephyria/items/f033cfd41335c65251e0"
  },
  {
    "likes_count": 4,
    "title": "典型的な高速化手法まとめ",
    "url": "https://qiita.com/kannkyo/items/a1dd70d179b3e50845ac"
  },
  {
    "likes_count": 4,
    "title": "Python で学ぶリファクタリング (基本編)",
    "url": "https://qiita.com/kibachi/items/245a4fea22eaa23fb255"
  },
  {
    "likes_count": 4,
    "title": "before_action",
    "url": "https://qiita.com/kouhei_matuura/items/5d0fb826363878535510"
  },
  {
    "likes_count": 4,
    "title": "　【JavaScript】オブジェクト配列を特定のキーでソートする方法",
    "url": "https://qiita.com/impl_s/items/647a6f4213b94965c1ce"
  },
  {
    "likes_count": 4,
    "title": "Fortranでエラトステネスのふるいを実装する",
    "url": "https://qiita.com/implicit_none/items/682ca10c5fa75d9f2708"
  },
  {
    "likes_count": 3,
    "title": "第13章 リファクタリングとは",
    "url": "https://qiita.com/geshi/items/15612fa35d0a05b62e24"
  },
  {
    "likes_count": 3,
    "title": "関数の戻り値しだいで記述は簡単になる。",
    "url": "https://qiita.com/nonbiri15/items/e5055f4458970433830d"
  },
  {
    "likes_count": 3,
    "title": "快適なC++生活のためにスクリプト言語を使おう",
    "url": "https://qiita.com/nonbiri15/items/3ad57e54a89c20f93fb8"
  },
  {
    "likes_count": 3,
    "title": "データ構造の操作とロジックのコードは区別しよう。",
    "url": "https://qiita.com/nonbiri15/items/98684bda5bb17bc5f03e"
  },
  {
    "likes_count": 3,
    "title": "無効になったドキュメントが残りやすい",
    "url": "https://qiita.com/nonbiri15/items/e3d0d590fbfa80f0f405"
  },
  {
    "likes_count": 3,
    "title": "いまさらリーダブルコードまとめ（第9章）",
    "url": "https://qiita.com/nogunogu/items/c90926ae3715174bf787"
  },
  {
    "likes_count": 3,
    "title": "プロダクトオーナーにリファクタリングを承諾してもらう方法",
    "url": "https://qiita.com/pandora2000/items/2684b1c9bedb03d91ac3"
  },
  {
    "likes_count": 3,
    "title": "開発速度が上がる順序を考慮して実装を行っていこう（投稿ミスのため削除します）",
    "url": "https://qiita.com/nonbiri15/items/9846085dfa61bab105a3"
  },
  {
    "likes_count": 3,
    "title": "Doxygenでヘッダファイルの依存関係を確認しよう",
    "url": "https://qiita.com/nonbiri15/items/8e734ff15555c7ebea9e"
  },
  {
    "likes_count": 3,
    "title": "歪んだ親子関係はプログラマを殺す 〜誤った継承関係による共通化の功罪〜",
    "url": "https://qiita.com/tamizuma/items/2189f7dd0706c213dd7a"
  },
  {
    "likes_count": 3,
    "title": "マーティン・ファウラーのリファクタリング 個人的まとめ",
    "url": "https://qiita.com/ryskiwt/items/4db0f9379103b7455320"
  },
  {
    "likes_count": 3,
    "title": "なんでもかんでも配列- 11[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/2f34ea6b7329a9e3af7a"
  },
  {
    "likes_count": 3,
    "title": "JSXのコンポーネントを分割してコードをスッキリさせる",
    "url": "https://qiita.com/monisoi/items/f985ed26fdc9a5064d40"
  },
  {
    "likes_count": 3,
    "title": "【メモ】Laravelで作っているサービスをリファクタリングした時の学び(箇条書き/現在進行中のため随時追加)",
    "url": "https://qiita.com/Yorinton/items/d1db1bd14ac739ee94ce"
  },
  {
    "likes_count": 3,
    "title": "レガシーコード改善ガイド用語集",
    "url": "https://qiita.com/KKKKKAAAAANNNNNMMMMMOOOOO/items/ce8fac70e0a11acaa27c"
  },
  {
    "likes_count": 3,
    "title": "「作り直した方が早い」の光と闇",
    "url": "https://qiita.com/kobayo/items/a7f97af8cd0ac3712f3e"
  },
  {
    "likes_count": 3,
    "title": "引き継いだモジュールに存在した、理解が難しかったコード",
    "url": "https://qiita.com/a_thug/items/69da51348f004973ad1b"
  },
  {
    "likes_count": 3,
    "title": "Scssをリファクタリングした記録",
    "url": "https://qiita.com/suisui654/items/e3b61d6807514294a2b9"
  },
  {
    "likes_count": 3,
    "title": "joinsでテーブルをつなげる際の２種類のやり方【ハッシュ】",
    "url": "https://qiita.com/tomoharutt/items/7cfe9b55bdc6c88735d8"
  },
  {
    "likes_count": 3,
    "title": "【Wordpress】増えてしまったタグやカテゴリーのテンプレートをフォルダ毎に整理する方法",
    "url": "https://qiita.com/tsukahara-akito/items/381efe59a6c22a5649a4"
  },
  {
    "likes_count": 3,
    "title": "判定ロジックを見やすくするための工夫",
    "url": "https://qiita.com/Ancient_Scapes/items/828f4f726cad706de6d3"
  },
  {
    "likes_count": 3,
    "title": "Androidアプリにおけるモジュラライズの進め方",
    "url": "https://qiita.com/akihito-okada/items/565fef6e44d7393c68aa"
  },
  {
    "likes_count": 3,
    "title": "[Python]dictのKeyErrorを排除する",
    "url": "https://qiita.com/grinpeaceman/items/c9ab5eaf7331cad7376f"
  },
  {
    "likes_count": 3,
    "title": "既存コードを変更する必要があるが、テストコードもない、どうしようかな、、、なんて時に",
    "url": "https://qiita.com/yamuscle/items/f3381199a8b894b192a3"
  },
  {
    "likes_count": 3,
    "title": "複雑なif文をカルノー図/ベイチ図で単純化しよう",
    "url": "https://qiita.com/YankeeDeltaBravo225/items/48000cdf01dde7698930"
  },
  {
    "likes_count": 3,
    "title": "テスト駆動開発から始めるRuby入門 ~アルゴリズムのパフォーマンスチューニングとベンチマークを実践する~",
    "url": "https://qiita.com/k2works/items/5c4f5686f921f12909ed"
  },
  {
    "likes_count": 3,
    "title": "【Kotlin】リファクタリング：FizzBuzz",
    "url": "https://qiita.com/sdkei/items/d75e63fd60dbac90b49a"
  },
  {
    "likes_count": 3,
    "title": "名著「リーダブルコード」の内容をわかりやすくまとめてみた(後編)2020年",
    "url": "https://qiita.com/Marusoccer/items/0be2c21202f0759f82ee"
  },
  {
    "likes_count": 3,
    "title": "[翻訳]デザインパターンによるクリーンコードのためのリファクタリング",
    "url": "https://qiita.com/M-Yamashii/items/ed62a75aeb141adb7b1a"
  },
  {
    "likes_count": 3,
    "title": "Eclipseのリファクタリングまとめ",
    "url": "https://qiita.com/rcftdbeu/items/a4fbfa17f1a614c67e65"
  },
  {
    "likes_count": 3,
    "title": "Rの多重ifブロックをいい感じに改良してみる",
    "url": "https://qiita.com/doikoji/items/37870503d7705a6dd546"
  },
  {
    "likes_count": 3,
    "title": "PHPでゴッドオブジェクトを作らないためにできる3つの対策",
    "url": "https://qiita.com/Ryo__M/items/aa5e12a5230e9c330ce5"
  },
  {
    "likes_count": 3,
    "title": "Pandasで上位n番目までの値を得る",
    "url": "https://qiita.com/nkay/items/3a1252311d5c258484d4"
  },
  {
    "likes_count": 3,
    "title": "Vue.js初心者がやりがちなコードの書き方",
    "url": "https://qiita.com/gravy-11/items/36355d74dcce2b49d185"
  },
  {
    "likes_count": 3,
    "title": "スーパーマンではなかったオッサンは荒れ果てた環境でどうリファクタリングできるのか",
    "url": "https://qiita.com/e99h2121/items/5a5499a674714520db04"
  },
  {
    "likes_count": 3,
    "title": "２つの帽子を知る",
    "url": "https://qiita.com/yoshii0110/items/987ca1451d328aa0c735"
  },
  {
    "likes_count": 3,
    "title": "[脱駆け出しエンジニア] 綺麗なコードを書くコツ",
    "url": "https://qiita.com/_Masa_asaM_/items/cf2a0facb81698dc0b85"
  },
  {
    "likes_count": 3,
    "title": "MySQLにあるセンシングデータをヒートマップで可視化した話",
    "url": "https://qiita.com/mindwood/items/6f29fdaaa82268df80f0"
  },
  {
    "likes_count": 2,
    "title": "結合度(カップリング)に焦点をあてたリファクタリング",
    "url": "https://qiita.com/kenzan100/items/07e6896c994eba6bb8a2"
  },
  {
    "likes_count": 2,
    "title": "視点がさまよっているif文,for文は読みにくい2",
    "url": "https://qiita.com/nonbiri15/items/ff91a91244e82fbcc0f3"
  },
  {
    "likes_count": 2,
    "title": "自作ライブラリでも画像データ構造を引数として画像処理の関数を実装しよう",
    "url": "https://qiita.com/nonbiri15/items/f1dc65eb520fc28d15b9"
  },
  {
    "likes_count": 2,
    "title": "配列でなければ配列にする処理に[$value]は不要か？(array)キャストではダメなの？",
    "url": "https://qiita.com/khsk/items/cf6fe8d81ec11bb40d9c"
  },
  {
    "likes_count": 2,
    "title": "良くない設計指針：include  \"mycode.h\"の指定にも設定用の変数を利用する",
    "url": "https://qiita.com/nonbiri15/items/b32a7ae2d22ec0c60ff3"
  },
  {
    "likes_count": 2,
    "title": "安易なNullチェック- 良いコード書くきっかけを与えたい。6[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/7b30d1e787a6b5fb82f1"
  },
  {
    "likes_count": 2,
    "title": "マーティン・ファウラーのリファクタリング 個人的まとめ（第６・７章）",
    "url": "https://qiita.com/ryskiwt/items/546a146db2eb10b0d96e"
  },
  {
    "likes_count": 2,
    "title": "可読性の高いコードを書くために心がけたいメモ",
    "url": "https://qiita.com/s-mk/items/9a04fc898eb3259496f4"
  },
  {
    "likes_count": 2,
    "title": "例外を無視する-14[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/9733feaf0b829ef0b67d"
  },
  {
    "likes_count": 2,
    "title": "実際のディレクトリ構造がいけてなくても見た目のURLだけは綺麗にする方法",
    "url": "https://qiita.com/akicho8/items/bcf8282e0a7932c3d480"
  },
  {
    "likes_count": 2,
    "title": "[読書メモ]リファクタリング - タイプコードの置き換え（振る舞いに影響を与えるタイプコードの場合）- 2",
    "url": "https://qiita.com/takutotacos/items/377b4ccaf130f945e5a8"
  },
  {
    "likes_count": 2,
    "title": "delegateについて",
    "url": "https://qiita.com/tomoharutt/items/11a005f1e837dc0acd17"
  },
  {
    "likes_count": 2,
    "title": "リファクタリング: Ruby エディション 第11章",
    "url": "https://qiita.com/tamago3keran/items/aeee895399655b9c701b"
  },
  {
    "likes_count": 2,
    "title": "Refactoring Day：技術的負債をリボ払いする",
    "url": "https://qiita.com/_kobacky/items/d7d7eeaa2ab394231222"
  },
  {
    "likes_count": 2,
    "title": "プログラムと美しさ：第七章　デザインパターン　―標準と模倣、魔法ではなく―",
    "url": "https://qiita.com/CodeOne/items/0ac628d6be24328ecc10"
  },
  {
    "likes_count": 2,
    "title": "『リファクタリング』を読んでみて",
    "url": "https://qiita.com/s-shirayama/items/cd8e0437ac8cf0c0974e"
  },
  {
    "likes_count": 2,
    "title": "【Tips】一定データ数ごとに改行する定型パターン",
    "url": "https://qiita.com/zaq9/items/3c019fad6ea312b9b6ea"
  },
  {
    "likes_count": 2,
    "title": "メソッドのインライン化(Inline Method)",
    "url": "https://qiita.com/dich1/items/6557c07d6d1c2398de16"
  },
  {
    "likes_count": 2,
    "title": "現場で役立つシステム設計まとめ(前半)",
    "url": "https://qiita.com/dich1/items/75b3a102ff6a2d27898d"
  },
  {
    "likes_count": 2,
    "title": "【Java】指摘しないこともあるけど出来ればリファクタリングしてほしいこと【好みの問題】",
    "url": "https://qiita.com/mtanabe/items/e87c6fac185bd8e24828"
  },
  {
    "likes_count": 2,
    "title": "UTが書きにくいと感じた時に思い返したいメモ",
    "url": "https://qiita.com/uiemon/items/271ce4849438b69c3cef"
  },
  {
    "likes_count": 2,
    "title": "リビーリングモジュールパターンをクラス構文で置き変える",
    "url": "https://qiita.com/ledsun/items/0963b6d88d6732362da2"
  },
  {
    "likes_count": 2,
    "title": "だめなコードを修正する!",
    "url": "https://qiita.com/luftfararen/items/4210b69fa96229c79c3f"
  },
  {
    "likes_count": 2,
    "title": "リファクタリングテクニック - 初期化処理の分離",
    "url": "https://qiita.com/kobae964/items/bd354e95e344e7a22a94"
  },
  {
    "likes_count": 2,
    "title": "『その機能本当にいりますか？ 』終わらない追加機能開発 [前編]",
    "url": "https://qiita.com/tikaranimaru/items/b5ed62aba4fdd261c275"
  },
  {
    "likes_count": 2,
    "title": "Rails　リファクタリング　まとめてみた",
    "url": "https://qiita.com/i-to-to-to-mi/items/bb24eb747b109aa99305"
  },
  {
    "likes_count": 2,
    "title": "[リファクタリング]リファクタのリファクタ。もしくはある日のきのこたけのこ大戦争～('ω`)ｷｭｩ...～",
    "url": "https://qiita.com/zephyria/items/09ccbc87ab7f653b4d35"
  },
  {
    "likes_count": 2,
    "title": "「リファクタリング 第2版」リファクタリング項目に関連／必要となるリファクタリング項目整理",
    "url": "https://qiita.com/cloudsnow/items/be56604b91767e2a8845"
  },
  {
    "likes_count": 2,
    "title": "テスト駆動開発から始めるRuby入門 ~ソフトウェア開発の三種の神器を準備する~",
    "url": "https://qiita.com/k2works/items/385dc16333e065d69bd6"
  },
  {
    "likes_count": 2,
    "title": "「単体テストが面倒くさい」に立ち向かう ―5つの弾丸",
    "url": "https://qiita.com/CodeOne/items/f448c973e0bdbad04b52"
  },
  {
    "likes_count": 2,
    "title": "pandasの`df.index = List[...]`的な代入文が嫌い",
    "url": "https://qiita.com/nkay/items/732015523bb554b1822c"
  },
  {
    "likes_count": 2,
    "title": "Pythonでローグライクゲーム作ってみた",
    "url": "https://qiita.com/beckyJPN/items/e08eb83f3d1e9f468f86"
  },
  {
    "likes_count": 2,
    "title": "Ruby on Rails のquery attributeを使ってみる",
    "url": "https://qiita.com/WaiChan/items/fa8a304917ab8283d491"
  },
  {
    "likes_count": 2,
    "title": "【Java】気付きにくいけど恐ろしく遅くなるコード",
    "url": "https://qiita.com/wa-papa-eto/items/e7563c5bd315f7652670"
  },
  {
    "likes_count": 2,
    "title": "リーダブルコードで読みにくいコードを改善していく ~ 準備編",
    "url": "https://qiita.com/NEKOKICHI2/items/0b7b1de064dd23a725fd"
  },
  {
    "likes_count": 2,
    "title": "リーダブルコードで読みにくいコードを改善していく ~ コメント編",
    "url": "https://qiita.com/NEKOKICHI2/items/7a809f19a57ad8a96b1b"
  },
  {
    "likes_count": 2,
    "title": "リーダブルコードで読みにくいコードを改善していく ~ 全般編",
    "url": "https://qiita.com/NEKOKICHI2/items/b3a8668bd1f8f7d7a693"
  },
  {
    "likes_count": 2,
    "title": "【リファクタリング】問い合わせと更新の分離を丁寧にやってみた",
    "url": "https://qiita.com/kutakutat/items/0ad90b39878ab0bc3ae6"
  },
  {
    "likes_count": 2,
    "title": "Bool型で判定する時に気をつけたいこと",
    "url": "https://qiita.com/reo0612/items/a9f55971fea7283e67b2"
  },
  {
    "likes_count": 2,
    "title": "こんな「リファクタリング」はいやだ",
    "url": "https://qiita.com/ktgw0316/items/270b40cab7b4e9750e2f"
  },
  {
    "likes_count": 2,
    "title": "リファクタリングに関する知識",
    "url": "https://qiita.com/narimiya/items/fbf039bb5ccb9eac6c5a"
  },
  {
    "likes_count": 1,
    "title": "写経 PowerAssert (Rspec3) テストをリファクタリング",
    "url": "https://qiita.com/masakinihirota/items/917fa94a79d5e94aee9f"
  },
  {
    "likes_count": 1,
    "title": "Clean Code that works(動作するきれいなコード）",
    "url": "https://qiita.com/kosei/items/21bc786d313af48adbd1"
  },
  {
    "likes_count": 1,
    "title": "CppUnitのwindowsでのプロジェクトの設定で文字コードをunicodeにする",
    "url": "https://qiita.com/nonbiri15/items/9a68a8a500a5e60a5f9c"
  },
  {
    "likes_count": 1,
    "title": "変数のスコープを少しでも狭める",
    "url": "https://qiita.com/nonbiri15/items/8fd23415dbde2de61828"
  },
  {
    "likes_count": 1,
    "title": "委譲の隠蔽 Hide Delegate",
    "url": "https://qiita.com/decoch/items/2f0294b71eb8277fe040"
  },
  {
    "likes_count": 1,
    "title": "いまさらリーダブルコードまとめ (第7章)",
    "url": "https://qiita.com/IsaoTakahashi/items/5a932e602627d590eaa6"
  },
  {
    "likes_count": 1,
    "title": "一次元配列をテーブルに出力する時の書き方",
    "url": "https://qiita.com/limithand/items/73c0984b94331ba002a6"
  },
  {
    "likes_count": 1,
    "title": "冗長な代入文 - 良いコード書くきっかけを与えたい。4[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/f9ebc741e40037553d5b"
  },
  {
    "likes_count": 1,
    "title": "simple is best（Composed Method パターン）",
    "url": "https://qiita.com/xuj/items/6d1dc4373798a8a5f22c"
  },
  {
    "likes_count": 1,
    "title": "条件分岐後の処理が冗長な場合- 12[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/799ec629fed1e1e22f3f"
  },
  {
    "likes_count": 1,
    "title": "TF-Slimを使ってTensorFlowのCNNモデルをリファクタリングしてみた",
    "url": "https://qiita.com/neriai/items/3cb5552c588fda18e3f4"
  },
  {
    "likes_count": 1,
    "title": "ちょっとずつ読むドメイン駆動設計 MartinFowlerによる序文3",
    "url": "https://qiita.com/YasuhiroKimesawa/items/0756706981bd2d4df1a6"
  },
  {
    "likes_count": 1,
    "title": "ちょっとずつ読むドメイン駆動設計 まえがき5",
    "url": "https://qiita.com/YasuhiroKimesawa/items/0d98e1ad20923fe698b5"
  },
  {
    "likes_count": 1,
    "title": "ミニマップで比較する良いコードと悪いコード",
    "url": "https://qiita.com/tag1216/items/fc1fd184a06a87c27fc5"
  },
  {
    "likes_count": 1,
    "title": "Use Case Refactoring",
    "url": "https://qiita.com/tokudiro/items/5d379c1ef45431935dd8"
  },
  {
    "likes_count": 1,
    "title": "引数オブジェクト（parameter object）を使ってみる",
    "url": "https://qiita.com/jkr_2255/items/64f5a94c7b2942e4cbb5"
  },
  {
    "likes_count": 1,
    "title": "「クラスを抽出」というリファクタリングがあるとしたらどういうものだろうか",
    "url": "https://qiita.com/snipsnipsnip/items/3a8d018d683d2c54ea15"
  },
  {
    "likes_count": 1,
    "title": "PHPで、名前が1,2,3...と続く同じ種類のカラム名をfor文で回す",
    "url": "https://qiita.com/Cesaroshun/items/766e73b14091a5e57fa8"
  },
  {
    "likes_count": 1,
    "title": "[扱いにくいコードについて考える] 理解しにくいのってどんな時？",
    "url": "https://qiita.com/takutotacos/items/311687c6b2ad81beaf94"
  },
  {
    "likes_count": 1,
    "title": "[読書メモ]リファクタリング - タイプコードの置き換え（振る舞いに影響を与えるタイプコードの場合）- 1",
    "url": "https://qiita.com/takutotacos/items/654e204d618d2059de7f"
  },
  {
    "likes_count": 1,
    "title": "[読書メモ]リファクタリング - ポリモーフィズムによる条件記述の置き換え",
    "url": "https://qiita.com/takutotacos/items/3421c3cd2147a16a5609"
  },
  {
    "likes_count": 1,
    "title": "なぜあなたのコードは汚いのか？",
    "url": "https://qiita.com/howling_wolf/items/991e76f87deefa788b7e"
  },
  {
    "likes_count": 1,
    "title": "railsのmodelでValidateをファイルに切り出す",
    "url": "https://qiita.com/SoarTec-lab/items/372f151fedcd28f800da"
  },
  {
    "likes_count": 1,
    "title": "リファクタリング: Ruby エディション 第8章",
    "url": "https://qiita.com/tamago3keran/items/2de394cfa1d36fdba924"
  },
  {
    "likes_count": 1,
    "title": "リファクタリング: Ruby エディション 第9章",
    "url": "https://qiita.com/tamago3keran/items/2818b20cdc42bb9c5388"
  },
  {
    "likes_count": 1,
    "title": "数値計算界に伝えたいオブジェクト指向構文とその用法",
    "url": "https://qiita.com/Gatz/items/2f017aa3f6be42c4539e"
  },
  {
    "likes_count": 1,
    "title": "エンジニアリングのリファクタリング、ツール環境改善は「株投資」や「タワーディフェンスゲーム」に似てるっていつも思ってる",
    "url": "https://qiita.com/YumaInaura/items/0f55e4fc8b143b0e62f3"
  },
  {
    "likes_count": 1,
    "title": "リファクタリングとは。",
    "url": "https://qiita.com/m11ko/items/02c34103531df854af31"
  },
  {
    "likes_count": 1,
    "title": "CSSリファクタリング",
    "url": "https://qiita.com/shun-koto/items/800c9d7f443079445458"
  },
  {
    "likes_count": 1,
    "title": "タイムラインへ一斉通知するたびにサーバーが落ちかけるのでチューニングした話",
    "url": "https://qiita.com/yu-croco/items/172932538f732df506ed"
  },
  {
    "likes_count": 1,
    "title": "【リファクタリング】メソッドの抽出手順",
    "url": "https://qiita.com/hollyhock0518/items/faa1b2618fe369aa78db"
  },
  {
    "likes_count": 1,
    "title": "昨日のクソコードをリファクタリングしてみた",
    "url": "https://qiita.com/k0gane_p/items/0746de58bba5edee9c48"
  },
  {
    "likes_count": 1,
    "title": "一時変数のインライン化(Inline Temp)",
    "url": "https://qiita.com/dich1/items/cf3ac7cfbcf1c829753c"
  },
  {
    "likes_count": 1,
    "title": "最近コードの書き方で困っていることメモ",
    "url": "https://qiita.com/minegishirei/items/a70b5b58cf885a7a03b4"
  },
  {
    "likes_count": 1,
    "title": "職人的なDOM生成コードをテンプレートエンジンに置き換える",
    "url": "https://qiita.com/ledsun/items/d25f78105dd667c6b657"
  },
  {
    "likes_count": 1,
    "title": "コードを抜き出してwinmergeにかける作業の時短",
    "url": "https://qiita.com/hidetaka0/items/5e48c7b6eb057d1050fa"
  },
  {
    "likes_count": 1,
    "title": "前記事のリファクタリングを咀嚼する（みんなでしりとり）",
    "url": "https://qiita.com/LLeak/items/002ce6ca105f515532b5"
  },
  {
    "likes_count": 1,
    "title": "【実装】リファクタリング",
    "url": "https://qiita.com/mfqmagic/items/18da904ed8706a42fec4"
  },
  {
    "likes_count": 1,
    "title": "「PythonでFlickr APIから画像取得」に掲載されているテンプレートコードをリファクタリングしてみた（前編）",
    "url": "https://qiita.com/satsukiya/items/86c33c3ff40736cfe129"
  },
  {
    "likes_count": 1,
    "title": "code smellリファクタリング第一弾[long method編]",
    "url": "https://qiita.com/kinshotomoya/items/b503f41beff9a3678830"
  },
  {
    "likes_count": 1,
    "title": "目指せ、愛され(ソフト)エンジニア！",
    "url": "https://qiita.com/haruki0227/items/87f3ab1e9cd1e1ee1a29"
  },
  {
    "likes_count": 1,
    "title": "「リファクタリング 第2版」Swiftでコーディング その4",
    "url": "https://qiita.com/cloudsnow/items/dbef554ca8b9de91a1a4"
  },
  {
    "likes_count": 1,
    "title": "「リファクタリング 第2版」Swiftでコーディング その5",
    "url": "https://qiita.com/cloudsnow/items/7cc6691e1ebfcbf2adba"
  },
  {
    "likes_count": 1,
    "title": "code smellリファクタリング[long parameter list編]",
    "url": "https://qiita.com/kinshotomoya/items/9690c092d1ca86a5130c"
  },
  {
    "likes_count": 1,
    "title": "「リファクタリング 第2版」Swiftでコーディング 第1章完了",
    "url": "https://qiita.com/cloudsnow/items/65d35673375d742bbbe4"
  },
  {
    "likes_count": 1,
    "title": "プロパティの型をそのままにReactiveProertyとして参照できるようにする",
    "url": "https://qiita.com/takkei/items/658af7f6f0fbb5ba1705"
  },
  {
    "likes_count": 1,
    "title": "「現場で役立つシステム設計の原則」読書録 １章",
    "url": "https://qiita.com/Ohtak/items/e7ae8d229cdaa3cad5bd"
  },
  {
    "likes_count": 1,
    "title": "FizzBuzz問題のリファクタリング【Ruby】",
    "url": "https://qiita.com/gohsan/items/bdcc44e17b5ceda16c44"
  },
  {
    "likes_count": 1,
    "title": "演算子の括弧を省略しないのがリーダブルコード",
    "url": "https://qiita.com/querykuma/items/57649fa77189f646bfe0"
  },
  {
    "likes_count": 1,
    "title": "【実装】コードの不吉な臭いを消滅",
    "url": "https://qiita.com/mfqmagic/items/eeb9ec35b71183703d17"
  },
  {
    "likes_count": 1,
    "title": "メタファーとしての負債",
    "url": "https://qiita.com/mach555/items/0973b956df507525305f"
  },
  {
    "likes_count": 1,
    "title": "リファクタリングしてみた①",
    "url": "https://qiita.com/m75cCMbYv5LEsO8/items/b82627d5be7d5f1f8a0a"
  },
  {
    "likes_count": 1,
    "title": "リーダブルコードで読みにくいコードを改善していく ~ 名前編",
    "url": "https://qiita.com/NEKOKICHI2/items/dc774bd79b1623032712"
  },
  {
    "likes_count": 1,
    "title": "リファクタリングするとき、しないとき",
    "url": "https://qiita.com/kituneponyo/items/6d7cd466d6fa9bf82e84"
  },
  {
    "likes_count": 1,
    "title": "【before_actionの具体的な使用法】Railsのリファクタリング",
    "url": "https://qiita.com/jinsoccer0520/items/fe5769fc55c4f672ffe2"
  },
  {
    "likes_count": 1,
    "title": "vue.jsにおけるリファクタリングのお話",
    "url": "https://qiita.com/imachan567/items/46e631c3af36903bf39b"
  },
  {
    "likes_count": 1,
    "title": "Fat Modelをリファクタリングする",
    "url": "https://qiita.com/linyclar/items/245f756148b300a56d9f"
  },
  {
    "likes_count": 1,
    "title": "ApplicationServiceをアクターで分ける",
    "url": "https://qiita.com/linyclar/items/2f4b23ca984a0c73b4c3"
  },
  {
    "likes_count": 1,
    "title": "before_actionとは？",
    "url": "https://qiita.com/mat827/items/c64ba326fe00cd89d89c"
  },
  {
    "likes_count": 1,
    "title": "はじめてのコード整理チェックリスト",
    "url": "https://qiita.com/9996/items/c25804705dbc310ea1a7"
  },
  {
    "likes_count": 1,
    "title": "【Java】IF文のネストを浅くする方法",
    "url": "https://qiita.com/wa-papa-eto/items/d0dc159ff2020b852c47"
  },
  {
    "likes_count": 1,
    "title": "【激変】美しいコードを書く方法",
    "url": "https://qiita.com/anaqe3/items/0a448f372709f76d35d2"
  },
  {
    "likes_count": 1,
    "title": "リファクタリングに使える俺的JavaScript小技テクニック集5選",
    "url": "https://qiita.com/nuko-suke/items/1aa673a27905090ee9b5"
  },
  {
    "likes_count": 1,
    "title": "働いて1年立ったので過去のコードにツッコミを入れていく",
    "url": "https://qiita.com/P_cablin321/items/7797a336a1d9c748e25b"
  },
  {
    "likes_count": 1,
    "title": "読書所感メモー「リファクタリング（新装版）」",
    "url": "https://qiita.com/keketon/items/f7011bd097949fd64ae7"
  },
  {
    "likes_count": 1,
    "title": "リファクタリングの可能性を示唆する不吉な匂い一覧",
    "url": "https://qiita.com/sho-naka/items/465c2be696139c5f15c8"
  },
  {
    "likes_count": 1,
    "title": "なぜリファクタリングが必要なのか（初心者向け）",
    "url": "https://qiita.com/sho-naka/items/dc603b51c3ccddcfdf93"
  },
  {
    "likes_count": 1,
    "title": "命名規則や書き方に悩まない、LT会で学んだリーダブルコード",
    "url": "https://qiita.com/ogubiz/items/19f021098c68e817806f"
  },
  {
    "likes_count": 1,
    "title": "【Rails】通知機能をリファクタリングしてみた",
    "url": "https://qiita.com/takaaaaaaaya/items/c6e71459d0e33742de70"
  },
  {
    "likes_count": 0,
    "title": "正規表現でfor文の後置インクリメント(＋α)を前置に置換する",
    "url": "https://qiita.com/khsk/items/7941c2d9de3a055e8485"
  },
  {
    "likes_count": 0,
    "title": "リファクタリング中に識別子の名前をなおすべきか",
    "url": "https://qiita.com/nonbiri15/items/728eef6c891b399ea748"
  },
  {
    "likes_count": 0,
    "title": "コード改善 meetup #1 に参加した感想",
    "url": "https://qiita.com/nunulk/items/6f76ed435e07ff5d6d47"
  },
  {
    "likes_count": 0,
    "title": "【Ruby】同じコードを書かないためだけにbefore_filterを使っていませんか？",
    "url": "https://qiita.com/yukke722/items/09d8e2b4645cb84f7e66"
  },
  {
    "likes_count": 0,
    "title": "リファクタリングについて",
    "url": "https://qiita.com/econeco/items/f5f40f50dd1bc2b9ed14"
  },
  {
    "likes_count": 0,
    "title": "リファクタリング",
    "url": "https://qiita.com/kosei/items/453e6fb1716e293828dd"
  },
  {
    "likes_count": 0,
    "title": "関数呼び出しと条件分岐を分離できないか - 良いコード書くきっかけを与えたい。9[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/b52c0fa1978f96eae548"
  },
  {
    "likes_count": 0,
    "title": "Getter、Setter逆問題 - 10[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/9e6d6ff9156cfd70b993"
  },
  {
    "likes_count": 0,
    "title": "マーティン・ファウラーのリファクタリング 個人的まとめ（第８・９章）",
    "url": "https://qiita.com/ryskiwt/items/a8afca1018ebba6f0266"
  },
  {
    "likes_count": 0,
    "title": "画面の表示値を利用することの問題点- 13[C#リファクタリングサンプル]",
    "url": "https://qiita.com/csharpisthebest/items/c34746964abc7475bf93"
  },
  {
    "likes_count": 0,
    "title": "[扱いにくいコードについて考える] パラメータへの代入",
    "url": "https://qiita.com/takutotacos/items/7c1a763c8fbb67d08162"
  },
  {
    "likes_count": 0,
    "title": "[読書メモ]リファクタリング - 委譲の隠蔽",
    "url": "https://qiita.com/takutotacos/items/4db4c2b5278ec654d863"
  },
  {
    "likes_count": 0,
    "title": "[読書メモ]リファクタリング - コレクションのカプセル化",
    "url": "https://qiita.com/takutotacos/items/4ee6d68526904b207983"
  },
  {
    "likes_count": 0,
    "title": "[扱いにくいコードについて考える]条件分岐を単純化するために",
    "url": "https://qiita.com/takutotacos/items/1af8011d392d41525795"
  },
  {
    "likes_count": 0,
    "title": "[読書メモ]リファクタリング - フィールドによるサブクラスの置き換え",
    "url": "https://qiita.com/takutotacos/items/9cb0cabdce32c5258d7f"
  },
  {
    "likes_count": 0,
    "title": "[読書メモ]リファクタリング - 条件記述の分解",
    "url": "https://qiita.com/takutotacos/items/2471e9b6174726e849c3"
  },
  {
    "likes_count": 0,
    "title": "[読書メモ]リファクタリング - Nullオブジェクトの導入",
    "url": "https://qiita.com/takutotacos/items/1ac5b700d2bcda85cdfb"
  },
  {
    "likes_count": 0,
    "title": "[WIP][読書メモ]リファクタリング - コードの不吉な臭い",
    "url": "https://qiita.com/takutotacos/items/eb6a4d03b02fd33c05f1"
  },
  {
    "likes_count": 0,
    "title": "[読書メモ]リファクタリング - タイプコードの置き換え（振る舞いに影響しないタイプコードの場合）",
    "url": "https://qiita.com/takutotacos/items/6df02d10bc7db378fb95"
  },
  {
    "likes_count": 0,
    "title": "2010/11/24 ハンガリアン記法でコードをきれいにする方法",
    "url": "https://qiita.com/hoge-fugaco/items/228378d580a38c13cbc5"
  },
  {
    "likes_count": 0,
    "title": "VIEWをDRYにするhelper機能",
    "url": "https://qiita.com/tomoharutt/items/ef546a9a52a55af4539c"
  },
  {
    "likes_count": 0,
    "title": "attr_accessorについて",
    "url": "https://qiita.com/tomoharutt/items/62591b140790f9768beb"
  },
  {
    "likes_count": 0,
    "title": "[メモ]Bottom Navigation ActivityのKotlinボイラープレートをリファクタリング",
    "url": "https://qiita.com/ryohji/items/79db00fda2ab7c270c55"
  },
  {
    "likes_count": 0,
    "title": "Javaのリファクタリングした際にclassファイルの差分比較をしてテスト要否を判断したい",
    "url": "https://qiita.com/vicboss1002/items/0ca40eef4b86c0312658"
  },
  {
    "likes_count": 0,
    "title": "【ExcelVBA】明細集計処理の戦術メモ",
    "url": "https://qiita.com/YoshitakaOkada/items/53735cb08ad207940f00"
  },
  {
    "likes_count": 0,
    "title": "コントローラーをなるべく活用してビューを綺麗にする(随時更新)",
    "url": "https://qiita.com/tomoharutt/items/b21d78254b43d9513434"
  },
  {
    "likes_count": 0,
    "title": "CakePHP3 bake無しで動くControllerの作りかた",
    "url": "https://qiita.com/aokazu/items/9047b9dca9c4a57c21fc"
  },
  {
    "likes_count": 0,
    "title": "Refactoring Ruby リファクタリング おでん ",
    "url": "https://qiita.com/YumaInaura/items/3d177d7fef6c65f2b7b7"
  },
  {
    "likes_count": 0,
    "title": "経路探索プログラムをTDDで書いてリファクタリングしてみた",
    "url": "https://qiita.com/kazokmr/items/982c11ba0b398cfc37ef"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリング】",
    "url": "https://qiita.com/JunInaba1/items/22ccf7bf8f8a287cacbf"
  },
  {
    "likes_count": 0,
    "title": "【LESSON2】",
    "url": "https://qiita.com/JunInaba1/items/c73910054cfb9f6638c1"
  },
  {
    "likes_count": 0,
    "title": "each内でのrenderパーシャルをcollectionに変更し高速化",
    "url": "https://qiita.com/shukan0728/items/6f79c28e81e692d10b92"
  },
  {
    "likes_count": 0,
    "title": "条件文の分解(Decompose Conditional)",
    "url": "https://qiita.com/dich1/items/44dcb2941483482a2da5"
  },
  {
    "likes_count": 0,
    "title": "条件分岐の組み替え(Recompose Conditional)",
    "url": "https://qiita.com/dich1/items/bd95d48cd9a093eb0cbd"
  },
  {
    "likes_count": 0,
    "title": "条件式の統合(Consolidate Conditional Expression)",
    "url": "https://qiita.com/dich1/items/0f34939faf4d916cb7ad"
  },
  {
    "likes_count": 0,
    "title": "重複する条件分岐の断片の統合(Consolidate Duplicate Conditional Fragments)",
    "url": "https://qiita.com/dich1/items/d80d6dec53ac5f45be84"
  },
  {
    "likes_count": 0,
    "title": "メソッド名の変更(Rename Method)",
    "url": "https://qiita.com/dich1/items/9a71fc668aa943935bcb"
  },
  {
    "likes_count": 0,
    "title": "引数の追加(Add Parameter)",
    "url": "https://qiita.com/dich1/items/4468abc5c6bc0818c4c4"
  },
  {
    "likes_count": 0,
    "title": "引数の削除(Remove Parameter)",
    "url": "https://qiita.com/dich1/items/fb80678883d18810b645"
  },
  {
    "likes_count": 0,
    "title": "ループからコレクションクロージャメソッドへ(Replace Loop with Collection Clousure Method)",
    "url": "https://qiita.com/dich1/items/31fcd6a4870dab70ec7f"
  },
  {
    "likes_count": 0,
    "title": "設定メソッドの削除(Remove Setting Method)",
    "url": "https://qiita.com/dich1/items/44d485e553af4c1a61fe"
  },
  {
    "likes_count": 0,
    "title": "引数オブジェクトの導入(Introduce Parameter Object)",
    "url": "https://qiita.com/dich1/items/32419db337319fcdfef9"
  },
  {
    "likes_count": 0,
    "title": "アルゴリズム変更(Substitute Algorithm)",
    "url": "https://qiita.com/dich1/items/6678cb56c6a96dbc143a"
  },
  {
    "likes_count": 0,
    "title": "メソッドの抽出(Extract Method)",
    "url": "https://qiita.com/dich1/items/35c353e25e40ca12e329"
  },
  {
    "likes_count": 0,
    "title": "読みやすいクリアなコードを書きたい〜ガード節〜【リファクタリング】",
    "url": "https://qiita.com/a-nishimura/items/c4e64efa3d76fa48ca16"
  },
  {
    "likes_count": 0,
    "title": "リーダブルコード第4章＜美しさ＞",
    "url": "https://qiita.com/waterblack888/items/b273f1cf6d4af30dc8a9"
  },
  {
    "likes_count": 0,
    "title": "「PythonでFlickr APIから画像取得」に掲載されているテンプレートコードをリファクタリングしてみた（後編）",
    "url": "https://qiita.com/satsukiya/items/df719ce81ca54713a229"
  },
  {
    "likes_count": 0,
    "title": "ITエンジニアの基礎　コード・リファクタリング編",
    "url": "https://qiita.com/savaniased/items/33f513883dfe9f4a180c"
  },
  {
    "likes_count": 0,
    "title": "リファクタリング　コードを書く上で気を付ける事！！",
    "url": "https://qiita.com/helloworld-yoppy/items/44284746a76583860d5e"
  },
  {
    "likes_count": 0,
    "title": "[リファクタリング]リファクタのリファクタ。もしくはある日のきのこたけのこ大戦争～(ﾟДﾟ)ﾊｧ?～",
    "url": "https://qiita.com/zephyria/items/5c3394119567658a5332"
  },
  {
    "likes_count": 0,
    "title": "[リファクタリング]リファクタのリファクタ。もしくはある日のきのこたけのこ大戦争～糸冬～",
    "url": "https://qiita.com/zephyria/items/c3fd2a81166180535827"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その1",
    "url": "https://qiita.com/cloudsnow/items/814b105666900868e2de"
  },
  {
    "likes_count": 0,
    "title": "PMや部長レイヤーに開発現場から伝えられていれば良かったこと〜レガシーコードからの脱却より〜",
    "url": "https://qiita.com/pentaro/items/d82f0b7ed981fa4b1985"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その2",
    "url": "https://qiita.com/cloudsnow/items/1daeeaab1ac263e1f7f0"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その3",
    "url": "https://qiita.com/cloudsnow/items/ea210059f5d1401a6f9b"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その6",
    "url": "https://qiita.com/cloudsnow/items/7b98ec4653099a987921"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その7",
    "url": "https://qiita.com/cloudsnow/items/a38f789ed0cee5543423"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その8",
    "url": "https://qiita.com/cloudsnow/items/684dd1d2a6db4c5cc36b"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その9",
    "url": "https://qiita.com/cloudsnow/items/e3c636b2a5f9bade17f8"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その10",
    "url": "https://qiita.com/cloudsnow/items/9f15457a51a4ab833609"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その11",
    "url": "https://qiita.com/cloudsnow/items/5dc6e3a82392bd2d5f62"
  },
  {
    "likes_count": 0,
    "title": "code smellリファクタリング[feature envy編]",
    "url": "https://qiita.com/kinshotomoya/items/9233b433042d7227a10e"
  },
  {
    "likes_count": 0,
    "title": "code smell リファクタリング[lazy class編]",
    "url": "https://qiita.com/kinshotomoya/items/8220b8393e8ac634c150"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その12",
    "url": "https://qiita.com/cloudsnow/items/4a747691ed0544ced218"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その13",
    "url": "https://qiita.com/cloudsnow/items/add81c991cd2b10b8da6"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その14",
    "url": "https://qiita.com/cloudsnow/items/ea48150b2cb6f5cdb032"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その15",
    "url": "https://qiita.com/cloudsnow/items/bed01e231339684c0503"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その16",
    "url": "https://qiita.com/cloudsnow/items/fcd2e52983399a800b86"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その17",
    "url": "https://qiita.com/cloudsnow/items/fbc13ba4de32c452008b"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その18",
    "url": "https://qiita.com/cloudsnow/items/fc28b118ac156dce1acb"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その19",
    "url": "https://qiita.com/cloudsnow/items/a49b8f093e605a546526"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その20",
    "url": "https://qiita.com/cloudsnow/items/3ccdb9b32d174397e3ba"
  },
  {
    "likes_count": 0,
    "title": "「リファクタリング 第2版」Swiftでコーディング その21",
    "url": "https://qiita.com/cloudsnow/items/34409e376b848b09b1de"
  },
  {
    "likes_count": 0,
    "title": "【初心者向け】Rubyで超簡単な本紹介アプリを作ってみる（リファクタリング編）",
    "url": "https://qiita.com/pontarou194/items/3e64a43db722a426b5bc"
  },
  {
    "likes_count": 0,
    "title": "より問題の起こりづらいAPI 定義のリファクタリングを目指して",
    "url": "https://qiita.com/ku6ryo/items/f4ef552c2ca3eb603e3c"
  },
  {
    "likes_count": 0,
    "title": "テスト駆動開発から始めるRuby入門 ~6時間でオブジェクト指向のエッセンスを体験する~",
    "url": "https://qiita.com/k2works/items/928d519a7afe99361ff2"
  },
  {
    "likes_count": 0,
    "title": "【PHP】カンマ区切り(CSV)データ処理にループと配列と分岐をなくして高速化",
    "url": "https://qiita.com/mainy/items/af8911c5cbfe571ea01e"
  },
  {
    "likes_count": 0,
    "title": "[読書] オブジェクト指向設計実践ガイド　～Rubyでわかる 進化しつづける柔軟なアプリケーションの育て方",
    "url": "https://qiita.com/mabots/items/9b9d5ee4c18cae6564fa"
  },
  {
    "likes_count": 0,
    "title": "Atomic Designを意識したリファクタリングができた(気がする)",
    "url": "https://qiita.com/wafuwafu13/items/9b783f6a0befc1471d70"
  },
  {
    "likes_count": 0,
    "title": "JUnitにおけるリファクタリング",
    "url": "https://qiita.com/maple_syrup/items/c370f3f850972aafd101"
  },
  {
    "likes_count": 0,
    "title": "Java MethodUtilでプロパティアクセスの処理をリファクタリング",
    "url": "https://qiita.com/400800mkouyou/items/b584f9bd40f80e74ec24"
  },
  {
    "likes_count": 0,
    "title": "リファクタリングと作り直しの違い",
    "url": "https://qiita.com/mht-masaki-taki/items/fe2f617e7876422ee790"
  },
  {
    "likes_count": 0,
    "title": "リファクタリングする上でのポイント（if文）",
    "url": "https://qiita.com/kuroi/items/90555c2e9bd27f7960a1"
  },
  {
    "likes_count": 0,
    "title": "Ruby on Rails　MVC周りのリファクタリング方法例まとめ",
    "url": "https://qiita.com/thkiyose/items/bf08d7cdf0a157bbd98d"
  },
  {
    "likes_count": 0,
    "title": "タイマーアプリをリファクタリングする",
    "url": "https://qiita.com/From_F/items/e6f9529ef8fccf59dab5"
  },
  {
    "likes_count": 0,
    "title": "【インデント】私がタブインデントをめちゃくちゃオススメする理由",
    "url": "https://qiita.com/ichiichi_1115/items/91c018106b68cb6101c4"
  },
  {
    "likes_count": 0,
    "title": "リファクタリング　第2章　まとめ",
    "url": "https://qiita.com/its532/items/021ae6514460054d37cb"
  },
  {
    "likes_count": 0,
    "title": "リーダブルコードで読みにくいコードを改善していく ~ 美しさ編",
    "url": "https://qiita.com/NEKOKICHI2/items/fa04933e942728e8fea6"
  },
  {
    "likes_count": 0,
    "title": "Viewページで何度も使われている用語を一つにまとめたい",
    "url": "https://qiita.com/fgem28/items/f1b577f6bbfa5df9f713"
  },
  {
    "likes_count": 0,
    "title": "Webアプリのメニューの表示条件の設計・コード例",
    "url": "https://qiita.com/hrk_okd/items/b5041855f660f68e6283"
  },
  {
    "likes_count": 0,
    "title": "[読書会]リファクタリング",
    "url": "https://qiita.com/shida/items/c3a1173bfe5b17c3fe8d"
  },
  {
    "likes_count": 0,
    "title": "リファクタリングについて",
    "url": "https://qiita.com/atsuk0r0/items/e553f41240fc3f3aed52"
  },
  {
    "likes_count": 0,
    "title": "Scssでリファクタリングやメンテナンス性を意識した記述",
    "url": "https://qiita.com/curin030204/items/05f7734ab9e60569f7df"
  },
  {
    "likes_count": 0,
    "title": "継続的にリファクタリングを行うソフトウェア開発ステップはチック・タックが適切かもしれない",
    "url": "https://qiita.com/ryo_mm2d/items/b8ad9193568ef4ad3d6c"
  },
  {
    "likes_count": 0,
    "title": "状態遷移があるならStateクラスを作ろう",
    "url": "https://qiita.com/linyclar/items/659c70e99f6717ef81d4"
  },
  {
    "likes_count": 0,
    "title": "複雑な計算があるならCalcRuleクラスを作ろう",
    "url": "https://qiita.com/linyclar/items/caba0d3a104c0c52c37a"
  },
  {
    "likes_count": 0,
    "title": "メソッドがあると便利な値を探してValueObjectにしよう",
    "url": "https://qiita.com/linyclar/items/8de01d7f9646e7c1781a"
  },
  {
    "likes_count": 0,
    "title": "Fat ControllerをリファクタリングしてDDDっぽくする",
    "url": "https://qiita.com/linyclar/items/52ee50fd5d6452bc0370"
  },
  {
    "likes_count": 0,
    "title": "【Rails】コントローラーの処理をモデル内のクラスメソッドとして記載する。",
    "url": "https://qiita.com/ko-nosu/items/209e8a486d6ded1bb709"
  },
  {
    "likes_count": 0,
    "title": "基本のリファクタリング",
    "url": "https://qiita.com/cactaceae/items/3ead64a29622b28433eb"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリングカタログ】関数宣言の変更",
    "url": "https://qiita.com/kfjt/items/38c7384fd1a7bac773db"
  },
  {
    "likes_count": 0,
    "title": "オブジェクト指向でリファクタリングを行う上で必要な知識",
    "url": "https://qiita.com/sho-naka/items/430dfd4d5918e937f63a"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリングカタログ】参照から値への変更",
    "url": "https://qiita.com/kfjt/items/56868fa26a9d907a0885"
  },
  {
    "likes_count": 0,
    "title": "リファクタリング・カタログ（抜粋）",
    "url": "https://qiita.com/sho-naka/items/fd37c0cef35235b39b56"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリングカタログ】関数群のクラスへの集約",
    "url": "https://qiita.com/kfjt/items/8f2ef0ebdf199405e2e1"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリングカタログ】クラスの抽出",
    "url": "https://qiita.com/kfjt/items/33488c0fb496e0c7fcf6"
  },
  {
    "likes_count": 0,
    "title": "良い命名はwhatやwhyから作られるという話",
    "url": "https://qiita.com/souhei-etou/items/4131f0c8e91547be161a"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリングカタログ】関数の抽出",
    "url": "https://qiita.com/kfjt/items/f5afee3dbd02804a4937"
  },
  {
    "likes_count": 0,
    "title": "【Rails】コントローラー内の記述をメソッド化してモデルに定義　←　1人のユーザーの全投稿に紐づくイイね数表示",
    "url": "https://qiita.com/Tanesaka/items/c068628b6c0a8759bac2"
  },
  {
    "likes_count": 0,
    "title": "ソフトウェアは書かれる回数より読まれる回数の方が多い",
    "url": "https://qiita.com/ck_qiita/items/0f4a37898da6068da0e0"
  },
  {
    "likes_count": 0,
    "title": "【リファクタリングカタログ】スーパークラスの抽出",
    "url": "https://qiita.com/kfjt/items/188b7e6bdc049df26d26"
  },
  {
    "likes_count": 0,
    "title": "【Ruby】整数を16進数化するメソッドの作成でリファクタリングに触れる",
    "url": "https://qiita.com/ganbareru_ya_uj/items/991394d216fe73029085"
  },
  {
    "likes_count": 0,
    "title": "「リーダブルコード」の要約・まとめ",
    "url": "https://qiita.com/makumaaku/items/a822c14a6be860e70035"
  }
]
